# is second character a valid formatting code (any of: 0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f,k,l,m,n,o,r)
# if yes, create new token; if no, append format character (&) and second character to current token
execute store success score $z stf.global run data modify storage stf:data temp.parse.code set from storage stf:data temp.parse.split[1]
execute unless data storage stf:data {temp:{parse:{code:"0"}}} unless data storage stf:data {temp:{parse:{code:"1"}}} unless data storage stf:data {temp:{parse:{code:"2"}}} unless data storage stf:data {temp:{parse:{code:"3"}}} unless data storage stf:data {temp:{parse:{code:"4"}}} unless data storage stf:data {temp:{parse:{code:"5"}}} unless data storage stf:data {temp:{parse:{code:"6"}}} unless data storage stf:data {temp:{parse:{code:"7"}}} unless data storage stf:data {temp:{parse:{code:"8"}}} unless data storage stf:data {temp:{parse:{code:"9"}}} unless data storage stf:data {temp:{parse:{code:"a"}}} unless data storage stf:data {temp:{parse:{code:"b"}}} unless data storage stf:data {temp:{parse:{code:"c"}}} unless data storage stf:data {temp:{parse:{code:"d"}}} unless data storage stf:data {temp:{parse:{code:"e"}}} unless data storage stf:data {temp:{parse:{code:"f"}}} unless data storage stf:data {temp:{parse:{code:"k"}}} unless data storage stf:data {temp:{parse:{code:"l"}}} unless data storage stf:data {temp:{parse:{code:"m"}}} unless data storage stf:data {temp:{parse:{code:"n"}}} unless data storage stf:data {temp:{parse:{code:"o"}}} unless data storage stf:data {temp:{parse:{code:"r"}}} run scoreboard players set $z stf.global 0
execute if score $z stf.global matches 1 run function stf:parse/tokenize/format/nest
execute unless score $z stf.global matches 1 run function stf:parse/tokenize/format/nest1